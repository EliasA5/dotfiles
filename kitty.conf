# vim:fileencoding=utf-8:foldmethod=marker

# `kitty +list-fonts
# `kitty +list-fonts --psnames | grep Fira`
#
font_family      FiraCodeNFM-Ret
# font_features FiraCode-Retina +zero
bold_font        auto
italic_font      auto
bold_italic_font auto

font_size 12.0
disable_ligatures never


cursor none

# cursor_text_color #111111

#: The cursor shape can be one of block, beam, underline.
# cursor_shape block

# cursor_beam_thickness 1.5
# cursor_underline_thickness 2.0
# scrollback_lines 2000

mouse_hide_wait 5.0

# url_color #0087bd
# url_style curly

open_url_with default
detect_urls yes

# url_excluded_characters
# show_hyperlink_targets no

# no need with tmux
# copy_on_select no
#:     copy_on_select a1
#:     map shift+cmd+v paste_from_buffer a1

# click_interval -1.0

# focus_follows_mouse no

# input_delay 3


# enable_audio_bell yes

# visual_bell_duration 0.0

# bell_on_tab "ðŸ”” "

# remember_window_size  yes
initial_window_width  1920
initial_window_height 1080

# enabled_layouts *

# draw_minimal_borders yes
# window_margin_width 0
# single_window_margin_width -1


# foreground #dddddd
# background #000000


background_image /home/$USER/Pictures/wezterm_background.png
background_opacity 0.8
background_blur 1
#: mirror-tiled, scaled, clamped, centered or window size
# background_image_layout tiled

background_tint 0.9

# shell .
editor nvim

# env
#: Specify the environment variables to be set in all child processes.
#: Using the name with an equal sign (e.g. env VAR=) will set it to
#: the empty string. Specifying only the name (e.g. env VAR) will
#: remove the variable from the child process' environment. Note that
#: environment variables are expanded recursively, for example::
#:     env VAR1=a
#:     env VAR2=${HOME}/${VAR1}/b


# clipboard_control write-clipboard write-primary read-clipboard-ask read-primary-ask
# clipboard_max_size 512

notify_on_cmd_finish invisible 20.0 bell
#: never Never send a notification.
#: unfocused Only send a notification when the window does not have keyboard focus.
#: invisible
#: always Always send a notification, regardless of window state.
#: Second, the action to perform. The default is notify. The possible
#: values are:

#: notify Send a desktop notification.

#: bell Ring the terminal bell.

#: command Run a custom command. All subsequent arguments are the cmdline to run.
#:     # Send a notification when a command takes more than 5 seconds in an unfocused window
#:     notify_on_cmd_finish unfocused
#:     # Send a notification when a command takes more than 10 seconds in a invisible window
#:     notify_on_cmd_finish invisible 10.0
#:     # Ring a bell when a command takes more than 10 seconds in a invisible window
#:     notify_on_cmd_finish invisible 10.0 bell
#:     # Run 'notify-send' when a command takes more than 10 seconds in a invisible window
#:     notify_on_cmd_finish invisible 10.0 command notify-send job finished

# term xterm-kitty


wayland_titlebar_color background


# kitty_mod ctrl+shift

clear_all_shortcuts yes

map kitty_mod+c copy_to_clipboard
map kitty_mod+v paste_from_clipboard

map kitty_mod+home scroll_home
map kitty_mod+end scroll_end

map kitty_mod+z scroll_to_prompt -1
map kitty_mod+x scroll_to_prompt -1

#::  You can open a new kitty window running an arbitrary program
#::      map kitty_mod+y launch mutt
#::      map ctrl+alt+enter launch --cwd=current
